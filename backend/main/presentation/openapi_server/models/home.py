# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.items import Items
from openapi_server.models.open_auction import OpenAuction
from openapi_server import util

from openapi_server.models.items import Items  # noqa: E501
from openapi_server.models.open_auction import OpenAuction  # noqa: E501

class Home(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auction=None, items=None):  # noqa: E501
        """Home - a model defined in OpenAPI

        :param auction: The auction of this Home.  # noqa: E501
        :type auction: OpenAuction
        :param items: The items of this Home.  # noqa: E501
        :type items: Items
        """
        self.openapi_types = {
            'auction': OpenAuction,
            'items': Items
        }

        self.attribute_map = {
            'auction': 'auction',
            'items': 'items'
        }

        self._auction = auction
        self._items = items

    @classmethod
    def from_dict(cls, dikt) -> 'Home':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The home of this Home.  # noqa: E501
        :rtype: Home
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auction(self):
        """Gets the auction of this Home.


        :return: The auction of this Home.
        :rtype: OpenAuction
        """
        return self._auction

    @auction.setter
    def auction(self, auction):
        """Sets the auction of this Home.


        :param auction: The auction of this Home.
        :type auction: OpenAuction
        """

        self._auction = auction

    @property
    def items(self):
        """Gets the items of this Home.


        :return: The items of this Home.
        :rtype: Items
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this Home.


        :param items: The items of this Home.
        :type items: Items
        """

        self._items = items
