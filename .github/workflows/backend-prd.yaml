name: Actions for Backend @prd
on:
  push:
    branches:
      - prd
    paths:
      - backend/**
      - .github/workflows/backend-prd.yaml

permissions: write-all

jobs:
  ActionsForBackend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Python Setup
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install Library
        working-directory: backend
        run: |
          pip3 install awscli
          pip install -r requirements.txt -t ./
          zip -r package.zip ./*

      - name: local dynamoDB create at docker
        working-directory: backend
        run:  |
          docker-compose -f ./local-dynamo/docker-compose.yaml up -d 
          sh ./local-dynamo/createTable.sh

      - name: run pytest
        id: pytest
        continue-on-error: true
        working-directory: backend
        env:
          MODE: "local"
          AWS_DYNAMO_DB_ITEMS_TABLE_NAME : "amtest-blind-auction-items"
          AWS_DYNAMO_DB_EVENTS_TABLE_NAME: "blind_auction_events"
          AWS_REGION: "ap-northeast-1"
        run: |
          pip install pytest
          pip install pytest-cov
          pytest test/ -v --cov --junitxml=pytest.xml --cov-report=term-missing:skip-covered | tee pytest-coverage.txt
          exit ${PIPESTATUS[0]};


      - name: Create Coverage Comment
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
            pytest-coverage-path: /backend/pytest-coverage.txt
            junitxml-path: ./backend/pytest.xml

      - name: Error handling
        if: ${{steps.pytest.outcome == 'failure'}}
        run: |
          echo "pytest failed"
          echo ${{steps.pytest.outcome}}
          exit 1

      - name: Deploy
        working-directory: backend
        run: |
          aws lambda update-function-code --function-name BA-Integrated-backend --zip-file fileb://package.zip --publish
