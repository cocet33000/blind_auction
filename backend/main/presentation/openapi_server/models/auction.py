# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Auction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, status=None, start_date=None, end_date=None):  # noqa: E501
        """Auction - a model defined in OpenAPI

        :param id: The id of this Auction.  # noqa: E501
        :type id: int
        :param name: The name of this Auction.  # noqa: E501
        :type name: str
        :param status: The status of this Auction.  # noqa: E501
        :type status: str
        :param start_date: The start_date of this Auction.  # noqa: E501
        :type start_date: datetime
        :param end_date: The end_date of this Auction.  # noqa: E501
        :type end_date: datetime
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'status': str,
            'start_date': datetime,
            'end_date': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'status': 'status',
            'start_date': 'start_date',
            'end_date': 'end_date'
        }

        self._id = id
        self._name = name
        self._status = status
        self._start_date = start_date
        self._end_date = end_date

    @classmethod
    def from_dict(cls, dikt) -> 'Auction':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The auction of this Auction.  # noqa: E501
        :rtype: Auction
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Auction.


        :return: The id of this Auction.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Auction.


        :param id: The id of this Auction.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Auction.


        :return: The name of this Auction.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Auction.


        :param name: The name of this Auction.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this Auction.


        :return: The status of this Auction.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Auction.


        :param status: The status of this Auction.
        :type status: str
        """

        self._status = status

    @property
    def start_date(self):
        """Gets the start_date of this Auction.


        :return: The start_date of this Auction.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this Auction.


        :param start_date: The start_date of this Auction.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def end_date(self):
        """Gets the end_date of this Auction.


        :return: The end_date of this Auction.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this Auction.


        :param end_date: The end_date of this Auction.
        :type end_date: datetime
        """

        self._end_date = end_date
